ordered(long_eff_clu$time_points,
levels=c("t0","t8","t16","t24","t48","t72","t96","t144"))
long_eff_clu$names<-
#long_eff_clu$time_points<-as.numeric(long_eff_clu$time_points)
# plot clusters
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=long_eff_clu$expression,
group=long_eff_clu$genes,
color=long_eff_clu$names))+
geom_line()+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcripts as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=8,  family="Arial"),
axis.text.y = element_text(color="black", size=12,  family="Arial"))+
scale_colour_hue()
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=long_eff_clu$expression,
group=long_eff_clu$genes,
color=long_eff_clu$names))+
geom_line()
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=long_eff_clu$expression,
group=long_eff_clu$genes,
color=long_eff_clu$names))+
geom_line()+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcripts as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=8,  family="Arial"),
axis.text.y = element_text(color="black", size=12,  family="Arial"))+
scale_colour_hue()
eff_cluster<-eff_ex%>%
mutate( hub_gene = labels(apres, type = "names") )%>%
mutate( cluster = labels(apres, type = "enum"))%>%# type can be exemplars as well
mutate(genes=rownames(eff_ex))%>%
group_by(cluster)%>%mutate(count = n())%>%                                    # mutate new column with group number! nice!
filter(count>9)%>%# remove clusters with less than 5 genes
dplyr::mutate(names=paste(cluster,hub_gene, count,sep="_"))                   # create new labels
#colnames(eff_cluster)<-c("1","2","3","4","5","6","7","8","hub_gene","cluster","genes","count","names")
#colnames(eff_cluster)<-c("0","8","16","24","48","72","96","144","hub_gene","cluster","genes","count","names")
long_eff_clu<-eff_cluster%>%
pivot_longer(cols=1:8, values_to="expression", names_to="time_points")
long_eff_clu$time_points<-
ordered(long_eff_clu$time_points,
levels=c("t0","t8","t16","t24","t48","t72","t96","t144"))
long_eff_clu$names<-
#long_eff_clu$time_points<-as.numeric(long_eff_clu$time_points)
# plot clusters
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=long_eff_clu$expression,
group=long_eff_clu$genes,
color=long_eff_clu$names))+
geom_line()+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcripts as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=8,  family="Arial"),
axis.text.y = element_text(color="black", size=12,  family="Arial"))+
scale_colour_hue()
eff_cluster<-eff_ex%>%
mutate( hub_gene = labels(apres, type = "names") )%>%
mutate( cluster = labels(apres, type = "enum"))%>%# type can be exemplars as well
mutate(genes=rownames(eff_ex))%>%
group_by(cluster)%>%mutate(count = n())%>%                                    # mutate new column with group number! nice!
filter(count>9)%>%# remove clusters with less than 5 genes
dplyr::mutate(names=paste(cluster,hub_gene, count,sep="_"))                   # create new labels
#colnames(eff_cluster)<-c("1","2","3","4","5","6","7","8","hub_gene","cluster","genes","count","names")
#colnames(eff_cluster)<-c("0","8","16","24","48","72","96","144","hub_gene","cluster","genes","count","names")
long_eff_clu<-eff_cluster%>%
pivot_longer(cols=1:8, values_to="expression", names_to="time_points")
long_eff_clu$time_points<-
ordered(long_eff_clu$time_points,
levels=c("t0","t8","t16","t24","t48","t72","t96","t144"))
#long_eff_clu$time_points<-as.numeric(long_eff_clu$time_points)
# plot clusters
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=long_eff_clu$expression,
group=long_eff_clu$genes,
color=long_eff_clu$names))+
geom_line()+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcripts as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=8,  family="Arial"),
axis.text.y = element_text(color="black", size=12,  family="Arial"))+
scale_colour_hue()
wide_clustered<-long_eff_clu%>%
pivot_wider(names_from=time_points, values_from=expression)
write.csv(wide_clustered, "nt_wide.csv")
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=long_eff_clu$expression,
group=long_eff_clu$genes,
color=long_eff_clu$names))+
geom_line()+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=0.001,
color="black",
family="Arial"))+
ylab("relative transcripts as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=8,  family="Arial"),
axis.text.y = element_text(color="black", size=12,  family="Arial"))+
scale_colour_hue()
p<-ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$names))+geom_point(size=0.5)+
geom_line(aes(group=long_eff_clu$genes))+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcript as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=0.01,  family="Arial"),
axis.text.y = element_text(color="black", size=12,  family="Arial"))+
scale_colour_hue()+
transition_reveal(long_eff_clu$time_points)
library(gifski)
library(gganimate)
library(ggplot2)
p<-ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$names))+geom_point(size=0.5)+
geom_line(aes(group=long_eff_clu$genes))+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcript as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=0.01,  family="Arial"),
axis.text.y = element_text(color="black", size=12,  family="Arial"))+
scale_colour_hue()+
transition_reveal(long_eff_clu$time_points)
animate(p, height=600, width=800)
colnames(eff_cluster)<-c("1","2","3","4","5","6","7","8","hub_gene","cluster","genes","count","names")
long_eff_clu<-eff_cluster%>%
pivot_longer(cols=1:8, values_to="expression", names_to="time_points")
long_eff_clu$time_points<-as.numeric(long_eff_clu$time_points)
long_eff_clu$time_points<-ordered(long_eff_clu$time_points,levels=c("1","2","3","4","5","6","7","8"))
p<-ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$names))+geom_point(size=0.5)+
geom_line(aes(group=long_eff_clu$genes))+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcript as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=0.01,  family="Arial"),
axis.text.y = element_text(color="black", size=12,  family="Arial"))+
scale_colour_hue()+
transition_reveal(long_eff_clu$time_points)
animate(p, height=600, width=800)
colnames(eff_cluster)<-c("1","2","3","4","5","6","7","8","hub_gene","cluster","genes","count","names")
long_eff_clu<-eff_cluster%>%
pivot_longer(cols=1:8, values_to="expression", names_to="time_points")
long_eff_clu$time_points<-as.numeric(long_eff_clu$time_points)
long_eff_clu$time_points<-ordered(long_eff_clu$time_points,levels=c("1","2","3","4","5","6","7","8"))
p<-ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$names))+geom_point(size=0.5)+
geom_line(aes(group=long_eff_clu$genes))+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcript as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=0.01,  family="Arial"),
axis.text.y = element_text(color="black", size=12,  family="Arial"))+
scale_colour_hue()+
transition_reveal(long_eff_clu$time_points)
animate(p, height=600, width=800)
long_eff_clu$time_points
class(long_eff_clu$time_points)
colnames(eff_cluster)<-c("1","2","3","4","5","6","7","8","hub_gene","cluster","genes","count","names")
long_eff_clu<-eff_cluster%>%
pivot_longer(cols=1:8, values_to="expression", names_to="time_points")
long_eff_clu$time_points<-ordered(long_eff_clu$time_points,
levels=c("1","2","3","4","5","6","7","8"))
long_eff_clu$time_points<-as.numeric(long_eff_clu$time_points)
p<-ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$names))+geom_point(size=0.5)+
geom_line(aes(group=long_eff_clu$genes))+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcript as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=0.01,  family="Arial"),
axis.text.y = element_text(color="black", size=12,  family="Arial"))+
scale_colour_hue()+
transition_reveal(long_eff_clu$time_points)
animate(p, height=600, width=800)
p<-ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=long_eff_clu$expression,
group=long_eff_clu$genes,
color=long_eff_clu$names))+geom_point(size=0.5)+
geom_line(aes(group=long_eff_clu$genes))+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcript as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=0.01,  family="Arial"),
axis.text.y = element_text(color="black", size=12,  family="Arial"))+
scale_colour_hue()+
transition_reveal(long_eff_clu$time_points)
animate(p, height=600, width=800)
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=long_eff_clu$expression,
group=long_eff_clu$genes,
color=long_eff_clu$names))+
geom_line()+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcripts as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=8,  family="Arial"),
axis.text.y = element_text(color="black", size=12,  family="Arial"))+
scale_colour_hue()
eff_cluster<-eff_ex%>%
mutate( hub_gene = labels(apres, type = "names") )%>%
mutate( cluster = labels(apres, type = "enum"))%>%# type can be exemplars as well
mutate(genes=rownames(eff_ex))%>%
group_by(cluster)%>%mutate(count = n())%>%                                    # mutate new column with group number! nice!
filter(count>9)%>%# remove clusters with less than 5 genes
dplyr::mutate(names=paste(cluster,hub_gene, count,sep="_"))                   # create new labels
#colnames(eff_cluster)<-c("1","2","3","4","5","6","7","8","hub_gene","cluster","genes","count","names")
#colnames(eff_cluster)<-c("0","8","16","24","48","72","96","144","hub_gene","cluster","genes","count","names")
long_eff_clu<-eff_cluster%>%
pivot_longer(cols=1:8, values_to="expression", names_to="time_points")
long_eff_clu$time_points<-
ordered(long_eff_clu$time_points,
levels=c("t0","t8","t16","t24","t48","t72","t96","t144"))
#long_eff_clu$time_points<-as.numeric(long_eff_clu$time_points)
# plot clusters
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=long_eff_clu$expression,
group=long_eff_clu$genes,
color=long_eff_clu$names))+
geom_line()+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcripts as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=8,  family="Arial"),
axis.text.y = element_text(color="black", size=12,  family="Arial"))+
scale_colour_hue()
View(eff_cluster)
ordered_wide<-read.csv("ordered_cluster/ordered_cluster.csv")
View(eff_cluster)
long_ordered<-ordered_wide%>%
pivot_longer(pivot_longer(cols=1:8, values_to="expression", names_to="time_points"))
library(tidyverse)
long_ordered<-ordered_wide%>%
pivot_longer(pivot_longer(cols=1:8, values_to="expression", names_to="time_points"))
ordered_wide<-read.csv("ordered_cluster/ordered_cluster.csv")
long_ordered<-ordered_wide%>%
pivot_longer(pivot_longer(cols=1:8, values_to="expression", names_to="time_points"))
View(ordered_wide)
long_ordered<-ordered_wide%>%
pivot_longer(pivot_longer(cols=7:14,
values_to="expression",
names_to="time_points"))
long_ordered<-ordered_wide%>%
pivot_longer(cols=7:14,
values_to="expression",
names_to="time_points"))
long_ordered<-ordered_wide%>%
pivot_longer(cols=7:14,
values_to="expression",
names_to="time_points")
long_ordered$time_points<-  ordered(long_ordered$time_points,
levels=c("t0","t8","t16","t24","t48","t72","t96","t144"))
long_ordered$time_points<-
ordered(long_ordered$time_points,
levels=c("t0","t8","t16","t24",
"t48","t72","t96","t144"))
ggplot(data = long_ordered,
aes(x=long_ordered$time_points,
y=long_ordered$expression,
group=long_ordered$genes,
color=long_ordered$names))+
geom_line()+
facet_wrap(~long_ordered$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcripts as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=8,  family="Arial"),
axis.text.y = element_text(color="black", size=12,  family="Arial"))+
scale_colour_hue()
ggplot(data = long_ordered,
aes(x=long_ordered$time_points,
y=long_ordered$expression,
group=long_ordered$genes,
color=long_ordered$names))+
geom_line()+
facet_wrap(~long_ordered$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="white",
family="Arial"))+
ylab("relative transcripts as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=8,  family="Arial"),
axis.text.y = element_text(color="black", size=12,  family="Arial"))+
scale_colour_hue()
colnames(ordered_wide)
ordered_wide<-read.csv("ordered_cluster/ordered_cluster.csv")
colnames(eff_cluster)<-c("X","hub_gene","cluster","genes","count","names",
"1","2","3","4","5","6","7","8")
ordered_wide<-read.csv("ordered_cluster/ordered_cluster.csv")
colnames(ordered_wide)<-c("X","hub_gene","cluster","genes","count","names",
"1","2","3","4","5","6","7","8")
long_ordered<-ordered_wide%>%
pivot_longer(cols=7:14,
values_to="expression",
names_to="time_points")
long_ordered<-ordered_wide%>%
pivot_longer(cols=7:14,
values_to="expression",
names_to="time_points")
long_ordered$time_points<-ordered(long_ordered$time_points,
levels=c("1","2","3","4","5","6","7","8"))
long_ordered$time_points<-as.numeric(long_ordered$time_points)
p<-ggplot(data = long_ordered,
aes(x=long_ordered$time_points,
y=long_ordered$expression,
group=long_ordered$genes,
color=long_ordered$names))+geom_point(size=0.5)+
geom_line(aes(group=long_ordered$genes))+
facet_wrap(~long_ordered$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcript as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=0.01,  family="Arial"),
axis.text.y = element_text(color="black", size=12,  family="Arial"))+
scale_colour_hue()+
transition_reveal(long_eff_clu$time_points)
animate(p, height=600, width=800)
long_ordered$time_points<-as.numeric(long_ordered$time_points)
class(long_ordered$time_points)
long_ordered$time_points
p<-ggplot(data = long_ordered,
aes(x=long_ordered$time_points,
y=long_ordered$expression,
group=long_ordered$genes,
color=long_ordered$names))+geom_point(size=0.5)+
geom_line(aes(group=long_ordered$genes))+
facet_wrap(~long_ordered$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcript as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=0.01,  family="Arial"),
axis.text.y = element_text(color="black", size=12,  family="Arial"))+
scale_colour_hue()+
transition_reveal(long_ordered$time_points)
animate(p, height=600, width=800)
p<-ggplot(data = long_ordered,
aes(x=long_ordered$time_points,
y=long_ordered$expression,
group=long_ordered$genes,
color=long_ordered$names))+geom_point(size=0.5)+
geom_line(aes(group=long_ordered$genes))+
facet_wrap(~long_ordered$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=0.0001,
color="white",
family="Arial"))+
ylab("relative transcript as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=0.01,  family="Arial"),
axis.text.y = element_text(color="black", size=12,  family="Arial"))+
scale_colour_hue()+
transition_reveal(long_ordered$time_points)
animate(p, height=600, width=1000)
