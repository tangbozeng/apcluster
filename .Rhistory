aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$cluster))+
geom_line()+
facet_wrap(~long_eff_clu$cluster, scales = "free")
apres <- apcluster(negDistMat(r=0.3), basemeans_efe, details=TRUE)# more r, bigger size of each group
apres <- apcluster(s=apres@sim, q=0.1) # more q, more fargmentation.
show(apres)
eff_cluster<-basemeans_efe%>%
mutate(cluster=labels(apres,type="enum"))%>%
mutate(genes=rownames(basemeans_efe))
rownames(eff_cluster)<-rownames(basemeans_efe)
long_eff_clu<-eff_cluster%>%
pivot_longer(cols=t0:t144, values_to="expression", names_to="time_points")
long_eff_clu$time_points<-
ordered(long_eff_clu$time_points,
levels=c("t0","t8","t16","t24","t48","t72","t96","t144"))
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$cluster))+
geom_line()+
facet_wrap(~long_eff_clu$cluster, scales = "free")
apres <- apcluster(negDistMat(r=0.1), basemeans_efe, details=TRUE)# more r, bigger size of each group
apres <- apcluster(s=apres@sim, q=0.2) # more q, more fargmentation.
show(apres)
eff_cluster<-basemeans_efe%>%
mutate(cluster=labels(apres,type="enum"))%>%
mutate(genes=rownames(basemeans_efe))
rownames(eff_cluster)<-rownames(basemeans_efe)
long_eff_clu<-eff_cluster%>%
pivot_longer(cols=t0:t144, values_to="expression", names_to="time_points")
long_eff_clu$time_points<-
ordered(long_eff_clu$time_points,
levels=c("t0","t8","t16","t24","t48","t72","t96","t144"))
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$cluster))+
geom_line()+
facet_wrap(~long_eff_clu$cluster, scales = "free")
apres <- apcluster(negDistMat(r=0.2), basemeans_efe, details=TRUE)# more r, bigger size of each group
apres <- apcluster(s=apres@sim, q=0.2) # more q, more fargmentation.
show(apres)
eff_cluster<-basemeans_efe%>%
mutate(cluster=labels(apres,type="enum"))%>%
mutate(genes=rownames(basemeans_efe))
rownames(eff_cluster)<-rownames(basemeans_efe)
long_eff_clu<-eff_cluster%>%
pivot_longer(cols=t0:t144, values_to="expression", names_to="time_points")
long_eff_clu$time_points<-
ordered(long_eff_clu$time_points,
levels=c("t0","t8","t16","t24","t48","t72","t96","t144"))
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$cluster))+
geom_line()+
facet_wrap(~long_eff_clu$cluster, scales = "free")
apres <- apcluster(negDistMat(r=0.08), basemeans_efe, details=TRUE)# more r, bigger size of each group
apres <- apcluster(s=apres@sim, q=0.5) # more q, more fargmentation.
show(apres)
apres <- apcluster(negDistMat(r=0.08), basemeans_efe, details=TRUE)# more r, bigger size of each group
apres <- apcluster(s=apres@sim, q=0.3) # more q, more fargmentation.
show(apres)
eff_cluster<-basemeans_efe%>%
mutate(cluster=labels(apres,type="enum"))%>%
mutate(genes=rownames(basemeans_efe))
rownames(eff_cluster)<-rownames(basemeans_efe)
long_eff_clu<-eff_cluster%>%
pivot_longer(cols=t0:t144, values_to="expression", names_to="time_points")
long_eff_clu$time_points<-
ordered(long_eff_clu$time_points,
levels=c("t0","t8","t16","t24","t48","t72","t96","t144"))
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$cluster))+
geom_line()+
facet_wrap(~long_eff_clu$cluster, scales = "free")
apres <- apcluster(negDistMat(r=0.2), basemeans_efe, details=TRUE)# more r, bigger size of each group
apres <- apcluster(s=apres@sim, q=0.2) # more q, more fargmentation.
show(apres)
apres <- apcluster(negDistMat(r=0.1), basemeans_efe, details=TRUE)# more r, bigger size of each group
apres <- apcluster(s=apres@sim, q=0.3) # more q, more fargmentation.
show(apres)
eff_cluster<-basemeans_efe%>%
mutate(cluster=labels(apres,type="enum"))%>%
mutate(genes=rownames(basemeans_efe))
rownames(eff_cluster)<-rownames(basemeans_efe)
long_eff_clu<-eff_cluster%>%
pivot_longer(cols=t0:t144, values_to="expression", names_to="time_points")
long_eff_clu$time_points<-
ordered(long_eff_clu$time_points,
levels=c("t0","t8","t16","t24","t48","t72","t96","t144"))
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$cluster))+
geom_line()+
facet_wrap(~long_eff_clu$cluster, scales = "free")
apres <- apcluster(negDistMat(r=0.09), basemeans_efe, details=TRUE)# more r, bigger size of each group
apres <- apcluster(s=apres@sim, q=0.1) # more q, more fargmentation.
show(apres)
eff_cluster<-basemeans_efe%>%
mutate(cluster=labels(apres,type="enum"))%>%
mutate(genes=rownames(basemeans_efe))
rownames(eff_cluster)<-rownames(basemeans_efe)
long_eff_clu<-eff_cluster%>%
pivot_longer(cols=t0:t144, values_to="expression", names_to="time_points")
long_eff_clu$time_points<-
ordered(long_eff_clu$time_points,
levels=c("t0","t8","t16","t24","t48","t72","t96","t144"))
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$cluster))+
geom_line()+
facet_wrap(~long_eff_clu$cluster, scales = "free")
apres <- apcluster(negDistMat(r=0.1), eff_ex, details=TRUE)# more r, bigger size of each group
apres <- apcluster(s=apres@sim, q=0.1) # more q, more fargmentation.
show(apres)
eff_cluster<-eff_ex%>%
mutate(cluster=labels(apres,type="enum"))%>%
mutate(genes=rownames(eff_ex))
rownames(eff_cluster)<-rownames(eff_ex)
long_eff_clu<-eff_cluster%>%
pivot_longer(cols=t0:t144, values_to="expression", names_to="time_points")
long_eff_clu$time_points<-
ordered(long_eff_clu$time_points,
levels=c("t0","t8","t16","t24","t48","t72","t96","t144"))
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$cluster))+
geom_line()+
facet_wrap(~long_eff_clu$cluster, scales = "free")
eff_cluster<-eff_ex%>%
mutate(cluster=labels(apres,type="enum"))%>%
mutate(genes=rownames(eff_ex))%>%
group_by(cluster)%>%mutate(count = n())
View(eff_cluster)
eff_cluster<-eff_ex%>%
mutate(cluster=labels(apres,type="enum"))%>%
mutate(genes=rownames(eff_ex))%>%
group_by(cluster)%>%mutate(count = n())%>% # mutate new column with group number! nice!
filter(count>5)
eff_cluster<-eff_ex%>%
mutate(cluster=labels(apres,type="enum"))%>%
mutate(genes=rownames(eff_ex))%>%
group_by(cluster)%>%mutate(count = n())%>% # mutate new column with group number! nice!
filter(count>5)# remove clusters with less than 5 genes
long_eff_clu<-eff_cluster%>%
pivot_longer(cols=t0:t144, values_to="expression", names_to="time_points")
long_eff_clu$time_points<-
ordered(long_eff_clu$time_points,
levels=c("t0","t8","t16","t24","t48","t72","t96","t144"))
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$cluster))+
geom_line()+
facet_wrap(~long_eff_clu$cluster, scales = "free")
eff_cluster<-eff_ex%>%
mutate(hub_gene=labels(apres,type="exemplars"))%>%
mutate(cluster=labels(apres, type="enum"))# type can be exemplars as well
mutate(genes=rownames(eff_ex))%>%
group_by(cluster)%>%mutate(count = n())%>% # mutate new column with group number! nice!
filter(count>5)%>%# remove clusters with less than 5 genes
nutate(names=paste(hub_gene, count,sep="_"))# create new labels
long_eff_clu<-eff_cluster%>%
pivot_longer(cols=t0:t144, values_to="expression", names_to="time_points")
long_eff_clu$time_points<-
ordered(long_eff_clu$time_points,
levels=c("t0","t8","t16","t24","t48","t72","t96","t144"))
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$names))+
geom_line()+
facet_wrap(~long_eff_clu$names, scales = "free")
eff_cluster<-eff_ex%>%
mutate(hub_gene=labels(apres,type="exemplars"))%>%
mutate(cluster=labels(apres, type="enum"))# type can be exemplars as well
mutate(genes=rownames(eff_ex))%>%
group_by(cluster)%>%mutate(count = n())%>% # mutate new column with group number! nice!
filter(count>5)%>%# remove clusters with less than 5 genes
mutate(names=paste(hub_gene, count,sep="_"))
eff_cluster<-eff_ex%>%
mutate(hub_gene=labels(apres,type="exemplars"))%>%
mutate(cluster=labels(apres, type="enum"))# type can be exemplars as well
mutate(genes=rownames(eff_ex))%>%
group_by(cluster)%>%mutate(count = n())%>% # mutate new column with group number! nice!
filter(count>5)%>%# remove clusters with less than 5 genes
dplyr::mutate(names=paste(hub_gene, count,sep="_"))
eff_cluster<-eff_ex%>%
mutate(hub_gene=labels(apres,type="exemplars"))%>%
mutate(cluster=labels(apres, type="enum"))# type can be exemplars as well
mutate(genes=rownames(eff_ex))%>%
group_by(cluster)%>%mutate(count = n())%>% # mutate new column with group number! nice!
filter(count>5)
apres <- apcluster(negDistMat(r=0.1), eff_ex, details=TRUE)# more r, bigger size of each group
apres <- apcluster(s=apres@sim, q=0.1) # more q, more fargmentation.
show(apres)
eff_cluster<-eff_ex%>%
mutate(hub_gene=labels(apres,type="exemplars"))%>%
mutate(cluster=labels(apres, type="enum"))%>%# type can be exemplars as well
mutate(genes=rownames(eff_ex))%>%
group_by(cluster)%>%mutate(count = n())%>% # mutate new column with group number! nice!
filter(count>5)%>%# remove clusters with less than 5 genes
dplyr::mutate(names=paste(hub_gene, count,sep="_"))#
long_eff_clu<-eff_cluster%>%
pivot_longer(cols=t0:t144, values_to="expression", names_to="time_points")
long_eff_clu$time_points<-
ordered(long_eff_clu$time_points,
levels=c("t0","t8","t16","t24","t48","t72","t96","t144"))
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$names))+
geom_line()+
facet_wrap(~long_eff_clu$names, scales = "free")
eff_ex<-read.csv("tpm_aver_efffector.csv", row.names = 1)
labels(apres,type="exemplars")
labels(apres,type="names")
eff_cluster<-eff_ex%>%
mutate(hub_gene=labels(apres,type="names"))%>%
mutate(cluster=labels(apres, type="enum"))%>%# type can be exemplars as well
mutate(genes=rownames(eff_ex))%>%
group_by(cluster)%>%mutate(count = n())%>% # mutate new column with group number! nice!
filter(count>5)%>%# remove clusters with less than 5 genes
dplyr::mutate(names=paste(hub_gene, count,sep="_"))# create new labels
long_eff_clu<-eff_cluster%>%
pivot_longer(cols=t0:t144, values_to="expression", names_to="time_points")
long_eff_clu$time_points<-
ordered(long_eff_clu$time_points,
levels=c("t0","t8","t16","t24","t48","t72","t96","t144"))
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$names))+
geom_line()+
facet_wrap(~long_eff_clu$names, scales = "free")
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$names))+
geom_line()+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=15,
color="black",
family="Arial"))+
ylab("relative transcript as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=6, family="Arial"),
axis.title.y = element_text(color="black", size=6, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=20,  family="Arial"),
axis.text.y = element_text(color="black", size=14,  family="Arial"))
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$names))+
geom_line()+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcript as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=6,  family="Arial"),
axis.text.y = element_text(color="black", size=6,  family="Arial"))
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$names))+
geom_line()+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcript as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=8,  family="Arial"),
axis.text.y = element_text(color="black", size=10,  family="Arial"))
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$names))+
geom_line()+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcript as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=8,  family="Arial"),
axis.text.y = element_text(color="black", size=10,  family="Arial"))+
scale_color_brewer(palette="Dark2")
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$names))+
geom_line()+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcript as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=8,  family="Arial"),
axis.text.y = element_text(color="black", size=10,  family="Arial"))
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$names))+
geom_line()+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcript as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=8,  family="Arial"),
axis.text.y = element_text(color="black", size=10,  family="Arial"))+
scale_color_brewer(palette="Spectral")
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$names))+
geom_line()+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcript as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=8,  family="Arial"),
axis.text.y = element_text(color="black", size=10,  family="Arial"))+
scale_colour_gradientn(colours=rainbow(4))
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$names))+
geom_line()+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcript as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=8,  family="Arial"),
axis.text.y = element_text(color="black", size=10,  family="Arial"))+
scale_colour_hue()
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$names))+
geom_line()+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcript as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=8,  family="Arial"),
axis.text.y = element_text(color="black", size=12,  family="Arial"))+
scale_colour_hue()
eff_cluster<-eff_ex%>%
mutate(hub_gene=labels(apres,type="names"))%>%
mutate(cluster=labels(apres, type="enum"))%>%# type can be exemplars as well
mutate(genes=rownames(eff_ex))%>%
group_by(cluster)%>%mutate(count = n())%>% # mutate new column with group number! nice!
filter(count>7)%>%# remove clusters with less than 5 genes
dplyr::mutate(names=paste(hub_gene, count,sep="_"))# create new labels
long_eff_clu<-eff_cluster%>%
pivot_longer(cols=t0:t144, values_to="expression", names_to="time_points")
long_eff_clu$time_points<-
ordered(long_eff_clu$time_points,
levels=c("t0","t8","t16","t24","t48","t72","t96","t144"))
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$names))+
geom_line()+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcript as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=8,  family="Arial"),
axis.text.y = element_text(color="black", size=12,  family="Arial"))+
scale_colour_hue()
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$names))+
geom_line()+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=10,
color="black",
family="Arial"))+
ylab("relative transcript as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=8,  family="Arial"),
axis.text.y = element_text(color="black", size=12,  family="Arial"))+
scale_colour_hue()
ggplot(data = long_eff_clu,
aes(x=long_eff_clu$time_points,
y=log2(long_eff_clu$expression),
group=long_eff_clu$genes,
color=long_eff_clu$names))+
geom_line()+
facet_wrap(~long_eff_clu$names, scales = "free")+
theme_classic()+
theme(strip.text = element_text(size=12,
color="black",
family="Arial"))+
ylab("relative transcript as TPMs")+
xlab("Time points")+
theme(legend.position = "none")+
theme(plot.title = element_text(color="black", size=20,  family="Arial"),
axis.title.x = element_text(color="black", size=20, family="Arial"),
axis.title.y = element_text(color="black", size=20, family="Arial"))+
theme(axis.text.x = element_text(color="black", size=8,  family="Arial"),
axis.text.y = element_text(color="black", size=12,  family="Arial"))+
scale_colour_hue()
?pivot_wider
?pivot_wider_spec
wide_clustered<-long_eff_clu%>%
pivot_wider_spec(names_from=time_points, values_from=expression)
wide_clustered<-long_eff_clu%>%
pivot_wider(names_from=time_points, values_from=expression)
View(wide_clustered)
write.csv(wide_clustered,"output.csv")
write.csv(wide_clustered,"output_apcluster.csv")
